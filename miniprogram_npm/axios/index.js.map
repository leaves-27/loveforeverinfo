{"version":3,"sources":["index.js","lib/axios.js","lib/utils.js","lib/helpers/bind.js","lib/core/Axios.js","lib/helpers/buildURL.js","lib/core/InterceptorManager.js","lib/core/dispatchRequest.js","lib/core/transformData.js","lib/cancel/isCancel.js","lib/defaults.js","lib/helpers/normalizeHeaderName.js","lib/adapters/http.js","lib/core/settle.js","lib/core/createError.js","lib/core/enhanceError.js","package.json","lib/adapters/xhr.js","lib/helpers/parseHeaders.js","lib/helpers/isURLSameOrigin.js","lib/helpers/cookies.js","lib/helpers/isAbsoluteURL.js","lib/helpers/combineURLs.js","lib/core/mergeConfig.js","lib/cancel/Cancel.js","lib/cancel/CancelToken.js","lib/helpers/spread.js"],"names":[],"mappings":";;;;;;;AAAA;;;ACAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AENA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,ADGA;ADIA,AGTA,ADGA,AENA,AHSA;ADIA,AGTA,ADGA,AENA,AHSA;ADIA,AGTA,ADGA,AENA,AHSA;ADIA,AGTA,AENA,AHSA,AENA,AHSA;ADIA,AGTA,AENA,AHSA,AENA,AHSA;ADIA,AGTA,AENA,AHSA,AENA,AHSA;ADIA,AGTA,AENA,ACHA,AFMA,AHSA;ADIA,AGTA,AENA,ACHA,AFMA,AHSA;ADIA,AGTA,AENA,ACHA,AFMA,AHSA;ADIA,AGTA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AGTA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AGTA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AHSA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AENA,ALeA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AENA,ALeA,AHSA;ADIA,AQxBA,ALeA,AENA,ACHA,ACHA,AENA,ALeA,AHSA;ADIA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;ADIA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;ADIA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,ACHA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,ACHA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AMlBA,ALeA,AENA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AMlBA,AT2BA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA;AU7BA,AXiCA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA,Ac1CA;AJaA,AXiCA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA,Ac1CA;AJaA,AXiCA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA,Ac1CA;AJaA,AKfA,AhBgDA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA,Ac1CA;AJaA,AKfA,AhBgDA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA,Ac1CA;AJaA,AKfA,AhBgDA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AHSA,Ac1CA;AJaA,AKfA,AhBgDA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AavCA,AhBgDA,Ac1CA;AJaA,AKfA,AhBgDA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AavCA,AhBgDA,Ac1CA;AJaA,AKfA,AhBgDA,AGTA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,AavCA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,Ac1CA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,Ac1CA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,Ac1CA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,AQxBA,APqBA,AQxBA,AFMA,AHSA,ALeA,Ae7CA,ADGA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,ACHA,AQxBA,AFMA,AHSA,ALeA,Ae7CA,ADGA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,ACHA,AQxBA,AFMA,AHSA,ALeA,Ae7CA,ADGA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,ACHA,AQxBA,AFMA,AHSA,ALeA,Ae7CA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,ACHA,AQxBA,AFMA,AHSA,ALeA,Ae7CA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,ACHA,AQxBA,ALeA,ALeA,Ae7CA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,ACHA,AQxBA,ALeA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,ACHA,AQxBA,ALeA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,ACHA,AQxBA,ALeA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,ACHA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AENA,ACHA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AbuCA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AOrBA,ApB4DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AOrBA,ApB4DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AOrBA,ApB4DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ACHA,AFMA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,AiBnDA,AFMA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,Ae7CA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,Ae7CA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,Ae7CA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,Ae7CA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,Ae7CA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,ALeA,Ae7CA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AQxBA,AQxBA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AOrBA,ACHA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,ArB+DA,AGTA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,AlBsDA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,AlBsDA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,AlBsDA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,AlBsDA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,AlBsDA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,AlBsDA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,AlBsDA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AQxBA,AxBwEA,Ac1CA;AJaA,AKfA,AQxBA,AlBsDA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AQxBA,AlBsDA,AgBhDA,AbuCA,AU9BA,ADGA,ADGA,AhBgDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AU9BA,ADGA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AU9BA,ADGA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AU9BA,ADGA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AU9BA,ADGA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AU9BA,ADGA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AU9BA,ADGA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,AFMA,AbuCA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,Af6CA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,Af6CA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,Af6CA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,Af6CA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,Af6CA,AS3BA,AjBmDA,Ac1CA;AJaA,AKfA,AQxBA,Af6CA,ARwBA,Ac1CA;AJaA,AKfA,AQxBA,Af6CA,ARwBA,Ac1CA;AJaA,AKfA,AQxBA,Af6CA,ARwBA,Ac1CA;AJaA,AKfA,AQxBA,AvBqEA,Ac1CA;AJaA,AKfA,AQxBA,AvBqEA,Ac1CA;AJaA,AKfA,AQxBA,AvBqEA,Ac1CA;AJaA,AKfA,AQxBA,AvBqEA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA,Ac1CA;AJaA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Af6CA;AU7BA,AKfA,Affile":"index.js","sourcesContent":["module.exports = require('./lib/axios');","\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","\n\nvar bind = require('./helpers/bind');\nvar isBuffer = require('is-buffer');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Function equal to merge with the difference being that no reference\n * to original objects is kept.\n *\n * @see merge\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction deepMerge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (typeof result[key] === 'object' && typeof val === 'object') {\n      result[key] = deepMerge(result[key], val);\n    } else if (typeof val === 'object') {\n      result[key] = deepMerge({}, val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  deepMerge: deepMerge,\n  extend: extend,\n  trim: trim\n};\n","\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n  config.method = config.method ? config.method.toLowerCase() : 'get';\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%40/gi, '@').\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  // Only Node.JS has a process variable that is of [[Class]] process\n  if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  } else if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar http = require('http');\nvar https = require('https');\nvar httpFollow = require('follow-redirects').http;\nvar httpsFollow = require('follow-redirects').https;\nvar url = require('url');\nvar zlib = require('zlib');\nvar pkg = require('./../../package.json');\nvar createError = require('../core/createError');\nvar enhanceError = require('../core/enhanceError');\n\nvar isHttps = /https:?/;\n\n/*eslint consistent-return:0*/\nmodule.exports = function httpAdapter(config) {\n  return new Promise(function dispatchHttpRequest(resolvePromise, rejectPromise) {\n    var timer;\n    var resolve = function resolve(value) {\n      clearTimeout(timer);\n      resolvePromise(value);\n    };\n    var reject = function reject(value) {\n      clearTimeout(timer);\n      rejectPromise(value);\n    };\n    var data = config.data;\n    var headers = config.headers;\n\n    // Set User-Agent (required by some servers)\n    // Only set header if it hasn't been set in config\n    // See https://github.com/axios/axios/issues/69\n    if (!headers['User-Agent'] && !headers['user-agent']) {\n      headers['User-Agent'] = 'axios/' + pkg.version;\n    }\n\n    if (data && !utils.isStream(data)) {\n      if (Buffer.isBuffer(data)) {\n        // Nothing to do...\n      } else if (utils.isArrayBuffer(data)) {\n        data = Buffer.from(new Uint8Array(data));\n      } else if (utils.isString(data)) {\n        data = Buffer.from(data, 'utf-8');\n      } else {\n        return reject(createError(\n          'Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream',\n          config\n        ));\n      }\n\n      // Add Content-Length header if data exists\n      headers['Content-Length'] = data.length;\n    }\n\n    // HTTP basic authentication\n    var auth = undefined;\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      auth = username + ':' + password;\n    }\n\n    // Parse url\n    var parsed = url.parse(config.url);\n    var protocol = parsed.protocol || 'http:';\n\n    if (!auth && parsed.auth) {\n      var urlAuth = parsed.auth.split(':');\n      var urlUsername = urlAuth[0] || '';\n      var urlPassword = urlAuth[1] || '';\n      auth = urlUsername + ':' + urlPassword;\n    }\n\n    if (auth) {\n      delete headers.Authorization;\n    }\n\n    var isHttpsRequest = isHttps.test(protocol);\n    var agent = isHttpsRequest ? config.httpsAgent : config.httpAgent;\n\n    var options = {\n      path: buildURL(parsed.path, config.params, config.paramsSerializer).replace(/^\\?/, ''),\n      method: config.method.toUpperCase(),\n      headers: headers,\n      agent: agent,\n      auth: auth\n    };\n\n    if (config.socketPath) {\n      options.socketPath = config.socketPath;\n    } else {\n      options.hostname = parsed.hostname;\n      options.port = parsed.port;\n    }\n\n    var proxy = config.proxy;\n    if (!proxy && proxy !== false) {\n      var proxyEnv = protocol.slice(0, -1) + '_proxy';\n      var proxyUrl = process.env[proxyEnv] || process.env[proxyEnv.toUpperCase()];\n      if (proxyUrl) {\n        var parsedProxyUrl = url.parse(proxyUrl);\n        var noProxyEnv = process.env.no_proxy || process.env.NO_PROXY;\n        var shouldProxy = true;\n\n        if (noProxyEnv) {\n          var noProxy = noProxyEnv.split(',').map(function trim(s) {\n            return s.trim();\n          });\n\n          shouldProxy = !noProxy.some(function proxyMatch(proxyElement) {\n            if (!proxyElement) {\n              return false;\n            }\n            if (proxyElement === '*') {\n              return true;\n            }\n            if (proxyElement[0] === '.' &&\n                parsed.hostname.substr(parsed.hostname.length - proxyElement.length) === proxyElement &&\n                proxyElement.match(/\\./g).length === parsed.hostname.match(/\\./g).length) {\n              return true;\n            }\n\n            return parsed.hostname === proxyElement;\n          });\n        }\n\n\n        if (shouldProxy) {\n          proxy = {\n            host: parsedProxyUrl.hostname,\n            port: parsedProxyUrl.port\n          };\n\n          if (parsedProxyUrl.auth) {\n            var proxyUrlAuth = parsedProxyUrl.auth.split(':');\n            proxy.auth = {\n              username: proxyUrlAuth[0],\n              password: proxyUrlAuth[1]\n            };\n          }\n        }\n      }\n    }\n\n    if (proxy) {\n      options.hostname = proxy.host;\n      options.host = proxy.host;\n      options.headers.host = parsed.hostname + (parsed.port ? ':' + parsed.port : '');\n      options.port = proxy.port;\n      options.path = protocol + '//' + parsed.hostname + (parsed.port ? ':' + parsed.port : '') + options.path;\n\n      // Basic proxy authorization\n      if (proxy.auth) {\n        var base64 = Buffer.from(proxy.auth.username + ':' + proxy.auth.password, 'utf8').toString('base64');\n        options.headers['Proxy-Authorization'] = 'Basic ' + base64;\n      }\n    }\n\n    var transport;\n    var isHttpsProxy = isHttpsRequest && (proxy ? isHttps.test(proxy.protocol) : true);\n    if (config.transport) {\n      transport = config.transport;\n    } else if (config.maxRedirects === 0) {\n      transport = isHttpsProxy ? https : http;\n    } else {\n      if (config.maxRedirects) {\n        options.maxRedirects = config.maxRedirects;\n      }\n      transport = isHttpsProxy ? httpsFollow : httpFollow;\n    }\n\n    if (config.maxContentLength && config.maxContentLength > -1) {\n      options.maxBodyLength = config.maxContentLength;\n    }\n\n    // Create the request\n    var req = transport.request(options, function handleResponse(res) {\n      if (req.aborted) return;\n\n      // uncompress the response body transparently if required\n      var stream = res;\n      switch (res.headers['content-encoding']) {\n      /*eslint default-case:0*/\n      case 'gzip':\n      case 'compress':\n      case 'deflate':\n        // add the unzipper to the body stream processing pipeline\n        stream = (res.statusCode === 204) ? stream : stream.pipe(zlib.createUnzip());\n\n        // remove the content-encoding in order to not confuse downstream operations\n        delete res.headers['content-encoding'];\n        break;\n      }\n\n      // return the last request in case of redirects\n      var lastRequest = res.req || req;\n\n      var response = {\n        status: res.statusCode,\n        statusText: res.statusMessage,\n        headers: res.headers,\n        config: config,\n        request: lastRequest\n      };\n\n      if (config.responseType === 'stream') {\n        response.data = stream;\n        settle(resolve, reject, response);\n      } else {\n        var responseBuffer = [];\n        stream.on('data', function handleStreamData(chunk) {\n          responseBuffer.push(chunk);\n\n          // make sure the content length is not over the maxContentLength if specified\n          if (config.maxContentLength > -1 && Buffer.concat(responseBuffer).length > config.maxContentLength) {\n            stream.destroy();\n            reject(createError('maxContentLength size of ' + config.maxContentLength + ' exceeded',\n              config, null, lastRequest));\n          }\n        });\n\n        stream.on('error', function handleStreamError(err) {\n          if (req.aborted) return;\n          reject(enhanceError(err, config, null, lastRequest));\n        });\n\n        stream.on('end', function handleStreamEnd() {\n          var responseData = Buffer.concat(responseBuffer);\n          if (config.responseType !== 'arraybuffer') {\n            responseData = responseData.toString(config.responseEncoding);\n          }\n\n          response.data = responseData;\n          settle(resolve, reject, response);\n        });\n      }\n    });\n\n    // Handle errors\n    req.on('error', function handleRequestError(err) {\n      if (req.aborted) return;\n      reject(enhanceError(err, config, null, req));\n    });\n\n    // Handle request timeout\n    if (config.timeout) {\n      timer = setTimeout(function handleRequestTimeout() {\n        req.abort();\n        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED', req));\n      }, config.timeout);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (req.aborted) return;\n\n        req.abort();\n        reject(cancel);\n      });\n    }\n\n    // Send the request\n    if (utils.isStream(data)) {\n      data.on('error', function handleStreamError(err) {\n        reject(enhanceError(err, config, null, req));\n      }).pipe(req);\n    } else {\n      req.end(data);\n    }\n  });\n};\n","\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","module.exports = {\n  \"_args\": [\n    [\n      {\n        \"raw\": \"axios\",\n        \"scope\": null,\n        \"escapedName\": \"axios\",\n        \"name\": \"axios\",\n        \"rawSpec\": \"\",\n        \"spec\": \"latest\",\n        \"type\": \"tag\"\n      },\n      \"/Users/leaves/Documents/workspace3/loveforeverinfo\"\n    ]\n  ],\n  \"_cnpm_publish_time\": 1559232796930,\n  \"_from\": \"axios\",\n  \"_hasShrinkwrap\": false,\n  \"_id\": \"axios@0.19.0\",\n  \"_location\": \"/axios\",\n  \"_nodeVersion\": \"10.14.1\",\n  \"_npmOperationalInternal\": {\n    \"host\": \"s3://npm-registry-packages\",\n    \"tmp\": \"tmp/axios_0.19.0_1559232796730_0.8176323141298978\"\n  },\n  \"_npmUser\": {\n    \"name\": \"emilyemorehouse\",\n    \"email\": \"emilyemorehouse@gmail.com\"\n  },\n  \"_npmVersion\": \"6.4.1\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"raw\": \"axios\",\n    \"scope\": null,\n    \"escapedName\": \"axios\",\n    \"name\": \"axios\",\n    \"rawSpec\": \"\",\n    \"spec\": \"latest\",\n    \"type\": \"tag\"\n  },\n  \"_requiredBy\": [\n    \"#USER\",\n    \"/\"\n  ],\n  \"_resolved\": \"https://registry.npm.taobao.org/axios/download/axios-0.19.0.tgz\",\n  \"_shasum\": \"8e09bff3d9122e133f7b8101c8fbdd00ed3d2ab8\",\n  \"_shrinkwrap\": null,\n  \"_spec\": \"axios\",\n  \"_where\": \"/Users/leaves/Documents/workspace3/loveforeverinfo\",\n  \"author\": {\n    \"name\": \"Matt Zabriskie\"\n  },\n  \"browser\": {\n    \"./lib/adapters/http.js\": \"./lib/adapters/xhr.js\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/axios/axios/issues\"\n  },\n  \"bundlesize\": [\n    {\n      \"path\": \"./dist/axios.min.js\",\n      \"threshold\": \"5kB\"\n    }\n  ],\n  \"dependencies\": {\n    \"follow-redirects\": \"1.5.10\",\n    \"is-buffer\": \"^2.0.2\"\n  },\n  \"description\": \"Promise based HTTP client for the browser and node.js\",\n  \"devDependencies\": {\n    \"bundlesize\": \"^0.17.0\",\n    \"coveralls\": \"^3.0.0\",\n    \"es6-promise\": \"^4.2.4\",\n    \"grunt\": \"^1.0.2\",\n    \"grunt-banner\": \"^0.6.0\",\n    \"grunt-cli\": \"^1.2.0\",\n    \"grunt-contrib-clean\": \"^1.1.0\",\n    \"grunt-contrib-watch\": \"^1.0.0\",\n    \"grunt-eslint\": \"^20.1.0\",\n    \"grunt-karma\": \"^2.0.0\",\n    \"grunt-mocha-test\": \"^0.13.3\",\n    \"grunt-ts\": \"^6.0.0-beta.19\",\n    \"grunt-webpack\": \"^1.0.18\",\n    \"istanbul-instrumenter-loader\": \"^1.0.0\",\n    \"jasmine-core\": \"^2.4.1\",\n    \"karma\": \"^1.3.0\",\n    \"karma-chrome-launcher\": \"^2.2.0\",\n    \"karma-coverage\": \"^1.1.1\",\n    \"karma-firefox-launcher\": \"^1.1.0\",\n    \"karma-jasmine\": \"^1.1.1\",\n    \"karma-jasmine-ajax\": \"^0.1.13\",\n    \"karma-opera-launcher\": \"^1.0.0\",\n    \"karma-safari-launcher\": \"^1.0.0\",\n    \"karma-sauce-launcher\": \"^1.2.0\",\n    \"karma-sinon\": \"^1.0.5\",\n    \"karma-sourcemap-loader\": \"^0.3.7\",\n    \"karma-webpack\": \"^1.7.0\",\n    \"load-grunt-tasks\": \"^3.5.2\",\n    \"minimist\": \"^1.2.0\",\n    \"mocha\": \"^5.2.0\",\n    \"sinon\": \"^4.5.0\",\n    \"typescript\": \"^2.8.1\",\n    \"url-search-params\": \"^0.10.0\",\n    \"webpack\": \"^1.13.1\",\n    \"webpack-dev-server\": \"^1.14.1\"\n  },\n  \"directories\": {},\n  \"dist\": {\n    \"shasum\": \"8e09bff3d9122e133f7b8101c8fbdd00ed3d2ab8\",\n    \"size\": 84224,\n    \"noattachment\": false,\n    \"tarball\": \"https://registry.npm.taobao.org/axios/download/axios-0.19.0.tgz\"\n  },\n  \"gitHead\": \"8d0b92b2678d96770304dd767cd05a59d37f12cf\",\n  \"homepage\": \"https://github.com/axios/axios\",\n  \"keywords\": [\n    \"xhr\",\n    \"http\",\n    \"ajax\",\n    \"promise\",\n    \"node\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"index.js\",\n  \"maintainers\": [\n    {\n      \"name\": \"mzabriskie\",\n      \"email\": \"mzabriskie@gmail.com\"\n    },\n    {\n      \"name\": \"nickuraltsev\",\n      \"email\": \"nick.uraltsev@gmail.com\"\n    }\n  ],\n  \"name\": \"axios\",\n  \"optionalDependencies\": {},\n  \"publish_time\": 1559232796930,\n  \"readme\": \"# axios\\n\\n[![npm version](https://img.shields.io/npm/v/axios.svg?style=flat-square)](https://www.npmjs.org/package/axios)\\n[![build status](https://img.shields.io/travis/axios/axios.svg?style=flat-square)](https://travis-ci.org/axios/axios)\\n[![code coverage](https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square)](https://coveralls.io/r/mzabriskie/axios)\\n[![install size](https://packagephobia.now.sh/badge?p=axios)](https://packagephobia.now.sh/result?p=axios)\\n[![npm downloads](https://img.shields.io/npm/dm/axios.svg?style=flat-square)](http://npm-stat.com/charts.html?package=axios)\\n[![gitter chat](https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square)](https://gitter.im/mzabriskie/axios)\\n[![code helpers](https://www.codetriage.com/axios/axios/badges/users.svg)](https://www.codetriage.com/axios/axios)\\n\\nPromise based HTTP client for the browser and node.js\\n\\n## Features\\n\\n- Make [XMLHttpRequests](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) from the browser\\n- Make [http](http://nodejs.org/api/http.html) requests from node.js\\n- Supports the [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) API\\n- Intercept request and response\\n- Transform request and response data\\n- Cancel requests\\n- Automatic transforms for JSON data\\n- Client side support for protecting against [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\\n\\n## Browser Support\\n\\n![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png) | ![Edge](https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png) | ![IE](https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |\\n--- | --- | --- | --- | --- | --- |\\nLatest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | Latest ✔ | 11 ✔ |\\n\\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\\n\\n## Installing\\n\\nUsing npm:\\n\\n```bash\\n$ npm install axios\\n```\\n\\nUsing bower:\\n\\n```bash\\n$ bower install axios\\n```\\n\\nUsing yarn:\\n\\n```bash\\n$ yarn add axios\\n```\\n\\nUsing cdn:\\n\\n```html\\n<script src=\\\"https://unpkg.com/axios/dist/axios.min.js\\\"></script>\\n```\\n\\n## Example\\n\\nPerforming a `GET` request\\n\\n```js\\nconst axios = require('axios');\\n\\n// Make a request for a user with a given ID\\naxios.get('/user?ID=12345')\\n  .then(function (response) {\\n    // handle success\\n    console.log(response);\\n  })\\n  .catch(function (error) {\\n    // handle error\\n    console.log(error);\\n  })\\n  .finally(function () {\\n    // always executed\\n  });\\n\\n// Optionally the request above could also be done as\\naxios.get('/user', {\\n    params: {\\n      ID: 12345\\n    }\\n  })\\n  .then(function (response) {\\n    console.log(response);\\n  })\\n  .catch(function (error) {\\n    console.log(error);\\n  })\\n  .then(function () {\\n    // always executed\\n  });  \\n\\n// Want to use async/await? Add the `async` keyword to your outer function/method.\\nasync function getUser() {\\n  try {\\n    const response = await axios.get('/user?ID=12345');\\n    console.log(response);\\n  } catch (error) {\\n    console.error(error);\\n  }\\n}\\n```\\n\\n> **NOTE:** `async/await` is part of ECMAScript 2017 and is not supported in Internet\\n> Explorer and older browsers, so use with caution.\\n\\nPerforming a `POST` request\\n\\n```js\\naxios.post('/user', {\\n    firstName: 'Fred',\\n    lastName: 'Flintstone'\\n  })\\n  .then(function (response) {\\n    console.log(response);\\n  })\\n  .catch(function (error) {\\n    console.log(error);\\n  });\\n```\\n\\nPerforming multiple concurrent requests\\n\\n```js\\nfunction getUserAccount() {\\n  return axios.get('/user/12345');\\n}\\n\\nfunction getUserPermissions() {\\n  return axios.get('/user/12345/permissions');\\n}\\n\\naxios.all([getUserAccount(), getUserPermissions()])\\n  .then(axios.spread(function (acct, perms) {\\n    // Both requests are now complete\\n  }));\\n```\\n\\n## axios API\\n\\nRequests can be made by passing the relevant config to `axios`.\\n\\n##### axios(config)\\n\\n```js\\n// Send a POST request\\naxios({\\n  method: 'post',\\n  url: '/user/12345',\\n  data: {\\n    firstName: 'Fred',\\n    lastName: 'Flintstone'\\n  }\\n});\\n```\\n\\n```js\\n// GET request for remote image\\naxios({\\n  method: 'get',\\n  url: 'http://bit.ly/2mTM3nY',\\n  responseType: 'stream'\\n})\\n  .then(function (response) {\\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\\n  });\\n```\\n\\n##### axios(url[, config])\\n\\n```js\\n// Send a GET request (default method)\\naxios('/user/12345');\\n```\\n\\n### Request method aliases\\n\\nFor convenience aliases have been provided for all supported request methods.\\n\\n##### axios.request(config)\\n##### axios.get(url[, config])\\n##### axios.delete(url[, config])\\n##### axios.head(url[, config])\\n##### axios.options(url[, config])\\n##### axios.post(url[, data[, config]])\\n##### axios.put(url[, data[, config]])\\n##### axios.patch(url[, data[, config]])\\n\\n###### NOTE\\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\\n\\n### Concurrency\\n\\nHelper functions for dealing with concurrent requests.\\n\\n##### axios.all(iterable)\\n##### axios.spread(callback)\\n\\n### Creating an instance\\n\\nYou can create a new instance of axios with a custom config.\\n\\n##### axios.create([config])\\n\\n```js\\nconst instance = axios.create({\\n  baseURL: 'https://some-domain.com/api/',\\n  timeout: 1000,\\n  headers: {'X-Custom-Header': 'foobar'}\\n});\\n```\\n\\n### Instance methods\\n\\nThe available instance methods are listed below. The specified config will be merged with the instance config.\\n\\n##### axios#request(config)\\n##### axios#get(url[, config])\\n##### axios#delete(url[, config])\\n##### axios#head(url[, config])\\n##### axios#options(url[, config])\\n##### axios#post(url[, data[, config]])\\n##### axios#put(url[, data[, config]])\\n##### axios#patch(url[, data[, config]])\\n##### axios#getUri([config])\\n\\n## Request Config\\n\\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\\n\\n```js\\n{\\n  // `url` is the server URL that will be used for the request\\n  url: '/user',\\n\\n  // `method` is the request method to be used when making the request\\n  method: 'get', // default\\n\\n  // `baseURL` will be prepended to `url` unless `url` is absolute.\\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\\n  // to methods of that instance.\\n  baseURL: 'https://some-domain.com/api/',\\n\\n  // `transformRequest` allows changes to the request data before it is sent to the server\\n  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\\n  // FormData or Stream\\n  // You may modify the headers object.\\n  transformRequest: [function (data, headers) {\\n    // Do whatever you want to transform the data\\n\\n    return data;\\n  }],\\n\\n  // `transformResponse` allows changes to the response data to be made before\\n  // it is passed to then/catch\\n  transformResponse: [function (data) {\\n    // Do whatever you want to transform the data\\n\\n    return data;\\n  }],\\n\\n  // `headers` are custom headers to be sent\\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\\n\\n  // `params` are the URL parameters to be sent with the request\\n  // Must be a plain object or a URLSearchParams object\\n  params: {\\n    ID: 12345\\n  },\\n\\n  // `paramsSerializer` is an optional function in charge of serializing `params`\\n  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\\n  paramsSerializer: function (params) {\\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\\n  },\\n\\n  // `data` is the data to be sent as the request body\\n  // Only applicable for request methods 'PUT', 'POST', and 'PATCH'\\n  // When no `transformRequest` is set, must be of one of the following types:\\n  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\\n  // - Browser only: FormData, File, Blob\\n  // - Node only: Stream, Buffer\\n  data: {\\n    firstName: 'Fred'\\n  },\\n\\n  // `timeout` specifies the number of milliseconds before the request times out.\\n  // If the request takes longer than `timeout`, the request will be aborted.\\n  timeout: 1000, // default is `0` (no timeout)\\n\\n  // `withCredentials` indicates whether or not cross-site Access-Control requests\\n  // should be made using credentials\\n  withCredentials: false, // default\\n\\n  // `adapter` allows custom handling of requests which makes testing easier.\\n  // Return a promise and supply a valid response (see lib/adapters/README.md).\\n  adapter: function (config) {\\n    /* ... */\\n  },\\n\\n  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\\n  // This will set an `Authorization` header, overwriting any existing\\n  // `Authorization` custom headers you have set using `headers`.\\n  // Please note that only HTTP Basic auth is configurable through this parameter.\\n  // For Bearer tokens and such, use `Authorization` custom headers instead.\\n  auth: {\\n    username: 'janedoe',\\n    password: 's00pers3cret'\\n  },\\n\\n  // `responseType` indicates the type of data that the server will respond with\\n  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\\n  //   browser only: 'blob'\\n  responseType: 'json', // default\\n\\n  // `responseEncoding` indicates encoding to use for decoding responses\\n  // Note: Ignored for `responseType` of 'stream' or client-side requests\\n  responseEncoding: 'utf8', // default\\n\\n  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\\n  xsrfCookieName: 'XSRF-TOKEN', // default\\n\\n  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\\n  xsrfHeaderName: 'X-XSRF-TOKEN', // default\\n\\n  // `onUploadProgress` allows handling of progress events for uploads\\n  onUploadProgress: function (progressEvent) {\\n    // Do whatever you want with the native progress event\\n  },\\n\\n  // `onDownloadProgress` allows handling of progress events for downloads\\n  onDownloadProgress: function (progressEvent) {\\n    // Do whatever you want with the native progress event\\n  },\\n\\n  // `maxContentLength` defines the max size of the http response content in bytes allowed\\n  maxContentLength: 2000,\\n\\n  // `validateStatus` defines whether to resolve or reject the promise for a given\\n  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\\n  // or `undefined`), the promise will be resolved; otherwise, the promise will be\\n  // rejected.\\n  validateStatus: function (status) {\\n    return status >= 200 && status < 300; // default\\n  },\\n\\n  // `maxRedirects` defines the maximum number of redirects to follow in node.js.\\n  // If set to 0, no redirects will be followed.\\n  maxRedirects: 5, // default\\n\\n  // `socketPath` defines a UNIX Socket to be used in node.js.\\n  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.\\n  // Only either `socketPath` or `proxy` can be specified.\\n  // If both are specified, `socketPath` is used.\\n  socketPath: null, // default\\n\\n  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\\n  // and https requests, respectively, in node.js. This allows options to be added like\\n  // `keepAlive` that are not enabled by default.\\n  httpAgent: new http.Agent({ keepAlive: true }),\\n  httpsAgent: new https.Agent({ keepAlive: true }),\\n\\n  // 'proxy' defines the hostname and port of the proxy server.\\n  // You can also define your proxy using the conventional `http_proxy` and\\n  // `https_proxy` environment variables. If you are using environment variables\\n  // for your proxy configuration, you can also define a `no_proxy` environment\\n  // variable as a comma-separated list of domains that should not be proxied.\\n  // Use `false` to disable proxies, ignoring environment variables.\\n  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\\n  // supplies credentials.\\n  // This will set an `Proxy-Authorization` header, overwriting any existing\\n  // `Proxy-Authorization` custom headers you have set using `headers`.\\n  proxy: {\\n    host: '127.0.0.1',\\n    port: 9000,\\n    auth: {\\n      username: 'mikeymike',\\n      password: 'rapunz3l'\\n    }\\n  },\\n\\n  // `cancelToken` specifies a cancel token that can be used to cancel the request\\n  // (see Cancellation section below for details)\\n  cancelToken: new CancelToken(function (cancel) {\\n  })\\n}\\n```\\n\\n## Response Schema\\n\\nThe response for a request contains the following information.\\n\\n```js\\n{\\n  // `data` is the response that was provided by the server\\n  data: {},\\n\\n  // `status` is the HTTP status code from the server response\\n  status: 200,\\n\\n  // `statusText` is the HTTP status message from the server response\\n  statusText: 'OK',\\n\\n  // `headers` the headers that the server responded with\\n  // All header names are lower cased\\n  headers: {},\\n\\n  // `config` is the config that was provided to `axios` for the request\\n  config: {},\\n\\n  // `request` is the request that generated this response\\n  // It is the last ClientRequest instance in node.js (in redirects)\\n  // and an XMLHttpRequest instance the browser\\n  request: {}\\n}\\n```\\n\\nWhen using `then`, you will receive the response as follows:\\n\\n```js\\naxios.get('/user/12345')\\n  .then(function (response) {\\n    console.log(response.data);\\n    console.log(response.status);\\n    console.log(response.statusText);\\n    console.log(response.headers);\\n    console.log(response.config);\\n  });\\n```\\n\\nWhen using `catch`, or passing a [rejection callback](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then) as second parameter of `then`, the response will be available through the `error` object as explained in the [Handling Errors](#handling-errors) section.\\n\\n## Config Defaults\\n\\nYou can specify config defaults that will be applied to every request.\\n\\n### Global axios defaults\\n\\n```js\\naxios.defaults.baseURL = 'https://api.example.com';\\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\\n```\\n\\n### Custom instance defaults\\n\\n```js\\n// Set config defaults when creating the instance\\nconst instance = axios.create({\\n  baseURL: 'https://api.example.com'\\n});\\n\\n// Alter defaults after instance has been created\\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\\n```\\n\\n### Config order of precedence\\n\\nConfig will be merged with an order of precedence. The order is library defaults found in [lib/defaults.js](https://github.com/axios/axios/blob/master/lib/defaults.js#L28), then `defaults` property of the instance, and finally `config` argument for the request. The latter will take precedence over the former. Here's an example.\\n\\n```js\\n// Create an instance using the config defaults provided by the library\\n// At this point the timeout config value is `0` as is the default for the library\\nconst instance = axios.create();\\n\\n// Override timeout default for the library\\n// Now all requests using this instance will wait 2.5 seconds before timing out\\ninstance.defaults.timeout = 2500;\\n\\n// Override timeout for this request as it's known to take a long time\\ninstance.get('/longRequest', {\\n  timeout: 5000\\n});\\n```\\n\\n## Interceptors\\n\\nYou can intercept requests or responses before they are handled by `then` or `catch`.\\n\\n```js\\n// Add a request interceptor\\naxios.interceptors.request.use(function (config) {\\n    // Do something before request is sent\\n    return config;\\n  }, function (error) {\\n    // Do something with request error\\n    return Promise.reject(error);\\n  });\\n\\n// Add a response interceptor\\naxios.interceptors.response.use(function (response) {\\n    // Do something with response data\\n    return response;\\n  }, function (error) {\\n    // Do something with response error\\n    return Promise.reject(error);\\n  });\\n```\\n\\nIf you may need to remove an interceptor later you can.\\n\\n```js\\nconst myInterceptor = axios.interceptors.request.use(function () {/*...*/});\\naxios.interceptors.request.eject(myInterceptor);\\n```\\n\\nYou can add interceptors to a custom instance of axios.\\n\\n```js\\nconst instance = axios.create();\\ninstance.interceptors.request.use(function () {/*...*/});\\n```\\n\\n## Handling Errors\\n\\n```js\\naxios.get('/user/12345')\\n  .catch(function (error) {\\n    if (error.response) {\\n      // The request was made and the server responded with a status code\\n      // that falls out of the range of 2xx\\n      console.log(error.response.data);\\n      console.log(error.response.status);\\n      console.log(error.response.headers);\\n    } else if (error.request) {\\n      // The request was made but no response was received\\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\\n      // http.ClientRequest in node.js\\n      console.log(error.request);\\n    } else {\\n      // Something happened in setting up the request that triggered an Error\\n      console.log('Error', error.message);\\n    }\\n    console.log(error.config);\\n  });\\n```\\n\\nYou can define a custom HTTP status code error range using the `validateStatus` config option.\\n\\n```js\\naxios.get('/user/12345', {\\n  validateStatus: function (status) {\\n    return status < 500; // Reject only if the status code is greater than or equal to 500\\n  }\\n})\\n```\\n\\n## Cancellation\\n\\nYou can cancel a request using a *cancel token*.\\n\\n> The axios cancel token API is based on the withdrawn [cancelable promises proposal](https://github.com/tc39/proposal-cancelable-promises).\\n\\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\\n\\n```js\\nconst CancelToken = axios.CancelToken;\\nconst source = CancelToken.source();\\n\\naxios.get('/user/12345', {\\n  cancelToken: source.token\\n}).catch(function (thrown) {\\n  if (axios.isCancel(thrown)) {\\n    console.log('Request canceled', thrown.message);\\n  } else {\\n    // handle error\\n  }\\n});\\n\\naxios.post('/user/12345', {\\n  name: 'new name'\\n}, {\\n  cancelToken: source.token\\n})\\n\\n// cancel the request (the message parameter is optional)\\nsource.cancel('Operation canceled by the user.');\\n```\\n\\nYou can also create a cancel token by passing an executor function to the `CancelToken` constructor:\\n\\n```js\\nconst CancelToken = axios.CancelToken;\\nlet cancel;\\n\\naxios.get('/user/12345', {\\n  cancelToken: new CancelToken(function executor(c) {\\n    // An executor function receives a cancel function as a parameter\\n    cancel = c;\\n  })\\n});\\n\\n// cancel the request\\ncancel();\\n```\\n\\n> Note: you can cancel several requests with the same cancel token.\\n\\n## Using application/x-www-form-urlencoded format\\n\\nBy default, axios serializes JavaScript objects to `JSON`. To send data in the `application/x-www-form-urlencoded` format instead, you can use one of the following options.\\n\\n### Browser\\n\\nIn a browser, you can use the [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) API as follows:\\n\\n```js\\nconst params = new URLSearchParams();\\nparams.append('param1', 'value1');\\nparams.append('param2', 'value2');\\naxios.post('/foo', params);\\n```\\n\\n> Note that `URLSearchParams` is not supported by all browsers (see [caniuse.com](http://www.caniuse.com/#feat=urlsearchparams)), but there is a [polyfill](https://github.com/WebReflection/url-search-params) available (make sure to polyfill the global environment).\\n\\nAlternatively, you can encode data using the [`qs`](https://github.com/ljharb/qs) library:\\n\\n```js\\nconst qs = require('qs');\\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\\n```\\n\\nOr in another way (ES6),\\n\\n```js\\nimport qs from 'qs';\\nconst data = { 'bar': 123 };\\nconst options = {\\n  method: 'POST',\\n  headers: { 'content-type': 'application/x-www-form-urlencoded' },\\n  data: qs.stringify(data),\\n  url,\\n};\\naxios(options);\\n```\\n\\n### Node.js\\n\\nIn node.js, you can use the [`querystring`](https://nodejs.org/api/querystring.html) module as follows:\\n\\n```js\\nconst querystring = require('querystring');\\naxios.post('http://something.com/', querystring.stringify({ foo: 'bar' }));\\n```\\n\\nYou can also use the [`qs`](https://github.com/ljharb/qs) library.\\n\\n###### NOTE\\nThe `qs` library is preferable if you need to stringify nested objects, as the `querystring` method has known issues with that use case (https://github.com/nodejs/node-v0.x-archive/issues/1665).\\n\\n## Semver\\n\\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\\n\\n## Promises\\n\\naxios depends on a native ES6 Promise implementation to be [supported](http://caniuse.com/promises).\\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\\n\\n## TypeScript\\naxios includes [TypeScript](http://typescriptlang.org) definitions.\\n```typescript\\nimport axios from 'axios';\\naxios.get('/user?ID=12345');\\n```\\n\\n## Resources\\n\\n* [Changelog](https://github.com/axios/axios/blob/master/CHANGELOG.md)\\n* [Upgrade Guide](https://github.com/axios/axios/blob/master/UPGRADE_GUIDE.md)\\n* [Ecosystem](https://github.com/axios/axios/blob/master/ECOSYSTEM.md)\\n* [Contributing Guide](https://github.com/axios/axios/blob/master/CONTRIBUTING.md)\\n* [Code of Conduct](https://github.com/axios/axios/blob/master/CODE_OF_CONDUCT.md)\\n\\n## Credits\\n\\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [Angular](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of Angular.\\n\\n## License\\n\\nMIT\\n\",\n  \"readmeFilename\": \"README.md\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/axios/axios.git\"\n  },\n  \"scripts\": {\n    \"build\": \"NODE_ENV=production grunt build\",\n    \"coveralls\": \"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\",\n    \"examples\": \"node ./examples/server.js\",\n    \"fix\": \"eslint --fix lib/**/*.js\",\n    \"postversion\": \"git push && git push --tags\",\n    \"preversion\": \"npm test\",\n    \"start\": \"node ./sandbox/server.js\",\n    \"test\": \"grunt test && bundlesize\",\n    \"version\": \"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json\"\n  },\n  \"typings\": \"./index.d.ts\",\n  \"version\": \"0.19.0\"\n}\n","\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar buildURL = require('./../helpers/buildURL');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = require('./../helpers/cookies');\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  utils.forEach(['url', 'method', 'params', 'data'], function valueFromConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    }\n  });\n\n  utils.forEach(['headers', 'auth', 'proxy'], function mergeDeepProperties(prop) {\n    if (utils.isObject(config2[prop])) {\n      config[prop] = utils.deepMerge(config1[prop], config2[prop]);\n    } else if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (utils.isObject(config1[prop])) {\n      config[prop] = utils.deepMerge(config1[prop]);\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  utils.forEach([\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'maxContentLength',\n    'validateStatus', 'maxRedirects', 'httpAgent', 'httpsAgent', 'cancelToken',\n    'socketPath'\n  ], function defaultToConfig2(prop) {\n    if (typeof config2[prop] !== 'undefined') {\n      config[prop] = config2[prop];\n    } else if (typeof config1[prop] !== 'undefined') {\n      config[prop] = config1[prop];\n    }\n  });\n\n  return config;\n};\n","\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n"]}